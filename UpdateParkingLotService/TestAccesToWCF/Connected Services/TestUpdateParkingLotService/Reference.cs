//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestAccesToWCF.TestUpdateParkingLotService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TestUpdateParkingLotService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddCarToParkingLot", ReplyAction="http://tempuri.org/IService/AddCarToParkingLotResponse")]
        void AddCarToParkingLot(string carRegNr, int parkingSpaceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddCarToParkingLot", ReplyAction="http://tempuri.org/IService/AddCarToParkingLotResponse")]
        System.Threading.Tasks.Task AddCarToParkingLotAsync(string carRegNr, int parkingSpaceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveCarFromParkingLot", ReplyAction="http://tempuri.org/IService/RemoveCarFromParkingLotResponse")]
        void RemoveCarFromParkingLot(int parkingSpaceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveCarFromParkingLot", ReplyAction="http://tempuri.org/IService/RemoveCarFromParkingLotResponse")]
        System.Threading.Tasks.Task RemoveCarFromParkingLotAsync(int parkingSpaceId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : TestAccesToWCF.TestUpdateParkingLotService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<TestAccesToWCF.TestUpdateParkingLotService.IService>, TestAccesToWCF.TestUpdateParkingLotService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddCarToParkingLot(string carRegNr, int parkingSpaceId) {
            base.Channel.AddCarToParkingLot(carRegNr, parkingSpaceId);
        }
        
        public System.Threading.Tasks.Task AddCarToParkingLotAsync(string carRegNr, int parkingSpaceId) {
            return base.Channel.AddCarToParkingLotAsync(carRegNr, parkingSpaceId);
        }
        
        public void RemoveCarFromParkingLot(int parkingSpaceId) {
            base.Channel.RemoveCarFromParkingLot(parkingSpaceId);
        }
        
        public System.Threading.Tasks.Task RemoveCarFromParkingLotAsync(int parkingSpaceId) {
            return base.Channel.RemoveCarFromParkingLotAsync(parkingSpaceId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TestUpdateParkingLotService.ITest")]
    public interface ITest {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITest/TestAddCarToParkingLot", ReplyAction="http://tempuri.org/ITest/TestAddCarToParkingLotResponse")]
        void TestAddCarToParkingLot(string carRegNr, int parkingSpaceId, string connString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITest/TestAddCarToParkingLot", ReplyAction="http://tempuri.org/ITest/TestAddCarToParkingLotResponse")]
        System.Threading.Tasks.Task TestAddCarToParkingLotAsync(string carRegNr, int parkingSpaceId, string connString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITest/TestRemoveCarFromParkingLot", ReplyAction="http://tempuri.org/ITest/TestRemoveCarFromParkingLotResponse")]
        void TestRemoveCarFromParkingLot(int parkingSpaceId, string connString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITest/TestRemoveCarFromParkingLot", ReplyAction="http://tempuri.org/ITest/TestRemoveCarFromParkingLotResponse")]
        System.Threading.Tasks.Task TestRemoveCarFromParkingLotAsync(int parkingSpaceId, string connString);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITestChannel : TestAccesToWCF.TestUpdateParkingLotService.ITest, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestClient : System.ServiceModel.ClientBase<TestAccesToWCF.TestUpdateParkingLotService.ITest>, TestAccesToWCF.TestUpdateParkingLotService.ITest {
        
        public TestClient() {
        }
        
        public TestClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TestClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void TestAddCarToParkingLot(string carRegNr, int parkingSpaceId, string connString) {
            base.Channel.TestAddCarToParkingLot(carRegNr, parkingSpaceId, connString);
        }
        
        public System.Threading.Tasks.Task TestAddCarToParkingLotAsync(string carRegNr, int parkingSpaceId, string connString) {
            return base.Channel.TestAddCarToParkingLotAsync(carRegNr, parkingSpaceId, connString);
        }
        
        public void TestRemoveCarFromParkingLot(int parkingSpaceId, string connString) {
            base.Channel.TestRemoveCarFromParkingLot(parkingSpaceId, connString);
        }
        
        public System.Threading.Tasks.Task TestRemoveCarFromParkingLotAsync(int parkingSpaceId, string connString) {
            return base.Channel.TestRemoveCarFromParkingLotAsync(parkingSpaceId, connString);
        }
    }
}
